/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Harshad
 */

#include <bits/stdc++.h>
#define f(i,n) for(int i=0;i<n;i++)
#define rep(i,a,b) for(int i=a;i<=b;i++)
typedef long long int ll;
using namespace std;


bool prime[10000005];
int cnt[10000005];
int pre[10000005];
int N = 10000005;

class TaskC {
public:
	void solve(std::istream& in, std::ostream& out) {
        int n; in>>n;
        memset(prime, true, sizeof(prime));
        memset(cnt, 0, sizeof(cnt));
        f(i, n){
            int x; in>>x;
            cnt[x]++;
        }
        memset(pre, 0, sizeof(pre));
        rep(i, 2, N-1){
            if(prime[i]){
                for(int j=i; j<N; j+=i){
                    pre[i]+=cnt[j];
                    prime[j]=false;
                }
            }
        }
        rep(i, 2, N-1) pre[i]+=pre[i-1];

        int q; in>>q;
        while(q--){
            int l, r; in>>l>>r;
            l = min(l, N-1);
            r = min(r, N-1);
            out<<pre[r] - pre[l-1]<<"\n";
        }


	}
};


int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
	TaskC solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
